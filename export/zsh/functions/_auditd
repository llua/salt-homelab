#compdef aureport aulast auvirt auditctl

_aureport() {
  _arguments -A "-*" : \
    '(-au --auth)'{-au,--auth}'[authentication report]' \
    '(-a --avc)'{-a,--avc}'[avc report]' \
    '(-c --config)'{-c,--config}'[configuration change report]' \
    '(-cr --crypto)'{-cr,--crypto}'[crypto report]' \
    '(-e --event)'{-e,--event}'[event report]' \
    '(-f --file)'{-f,--file}'[file activity report]' \
    '--failed[select failed entries]' \
    '(-h --host)'{-h,--host}'[host report]' \
    '--help[command summary]' \
    '(-i --interpret)'{-i,--interpret}'[interpret numeric entities into text]' \
    '(-if --input)'{-if,--input}'[input file]:input:_files' \
    '--input-logs[use log file specified in auditd.conf]' \
    '(-k --key)'{-k,--key}'[report audit rule keys]' \
    '(-l --login)'{-l,--login}'[login report]' \
    '(-m --mods)'{-m,--mods}'[account modification report]' \
    '(-ma --mac)'{-ma,--mac}'[Mandatory Access Control report]' \
    '(-n --anomaly)'{-n,--anomaly}'[anomaly report]' \
    '--node[select events from node]:node: _message "node"' \
    '(-p --pid)'{-p,--pid}'[processes report]' \
    '(-r --response)'{-r,--response}'[anomaly responses report]' \
    '(-s --syscall)'{-s,--syscall}'[syscall report]' \
    '(-te --end)'{-te,--end}'[show records with the timestamps equal or before the given time]:end time:( $auditd_dates ):: : _guard "^-*" "end time"' \
    '(-ts --start)'{-ts,--start}'[show records with the timestamps equal or after the given time]::start date:( $auditd_dates ):: : _guard "^-*" "start time"' \
    '--success[select  successful entries]' \
    '--summary[summary report]' \
    '(-t --log)'{-t,--log}'[report start and end times]' \
    '--tty[tty keystrokes reports]' \
    '(-tm --terminal)'{-tm,--terminal}'[terminal report]' \
    '(-u --user)'{-u,--user}'[user report]' \
    '(-v --version)'{-v,--version}'[print version]' \
    '(-x --executable)'{-x,--executable}'[executables report]'
}

_aulast() {
  _arguments -A "-*" : \
    '--bad[bad login report]' \
    '--extract[dump raw audit log]' \
    '-f+[input file]:file:_files' \
    '--proof[print event serial number]' \
    '--stdin[read audit record from stdin]' \
    '1:user:_users' \
    '2:tty:_message "tty"'
}

_auditctl() {
  _arguments -A "-*" : \
    '-b[set buffer size]:buffer:_message "buffer"' \
    '-e[set enabled flag]:flag:(( 0\:"disable auditing" 1\:"enable auditing" 2\:"lock config" ))' \
    '-f[set failure flag]:flag:(( 0\:silent 1\:printk 2\:panic ))' \
    '-h[help]' \
    '-i[ignore errors from input file]' \
    '-c[continue on failure]'
  return ret
}

_auvirt() {
  _arguments -A '-*' : \
    '--all-events[show records for all virtualization related events]' \
    '--debug[print debug messages to standard output]' \
    '(-f --file --stdin)'{-f,--file}'[read records from specified file]:auditd log:_files' \
    '(-h --help)'{-h,--help}'[print help message and exit]' \
    '--proof[print all the identifiers of the audit records used to calculate the event]' \
    '--show-uuid[add the guest'\''s UUID to each record]' \
    '(-f --file)--stdin[read records from stdin]' \
    '--summary[print a summary with infomation about the events found]' \
    '(-te --end)'{-te,--end}'[show records with the timestamps equal or before the given time]:end time:( $auditd_dates ):: : _guard "^-*" "end time"' \
    '(-ts --start)'{-ts,--start}'[show records with the timestamps equal or after the given time]::start date:( $auditd_dates ):: : _guard "^-*" "start time"' \
    '(-u --uuid)'{-u,--uuid}'[only show events related to the guest with the given UUID]:UUID' \
    '(-v --vm)'{-v,--vm}'[only show events related to the guest with the given name]:name'
}

_auditd() {
  local -a auditd_dates
  auditd_dates=(now recent today yesterday this-week week-ago this-month this-year)

  local ret
  _call_function ret _$service
  return ret
}

_auditd "$@"
