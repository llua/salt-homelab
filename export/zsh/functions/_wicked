#compdef wicked wickedd

__wicked_logtarget() {
  _values -S : 'log target' 'stderr: :(pid)' \
    'syslog: :( user daemon local{0..7} )' # TODO: complete perror. _values can't do multiple argument completion
}

__wicked() {
  local curcontext="$curcontext" state state_descr line expl
  typeset -A opt_args; local -a subcommands args
  subcommands=( ifup ifdown ifreload ifstatus ifcheck show-config convert show-xml xpath getnames )

  _arguments -C : \
    '--config[alternative config file]:configuration file: _files' \
    '--log-level[set log level]:log level:(error warning notice info debug)' \
    '--log-target[set log target]: : _wicked_logtarget' \
    '--debug[enable debugging]:facility:(
      ifconfig readwrite xpath extension wicked 
      wicked-xml events dhcp autoip ipv6 socket 
      dbus wireless xml objectmodel application 
      modem lldp timer mini most all
    )' \
    '--root-directory[alternative root directory]:alt root directory: _files -/' \
    '--dry-run[prevent actual changes]' \
    '--systemd[force syslog target]' \
    '--transient[more verbose interface return codes]' \
    '1:wicked subcommands:( $subcommands[@] )' \
    '*:: :->commands'


  while (( $#state )); do
    local curstate=$state
    shift state
    case $curstate in
      commands)
        local cmd=${subcommands[(r)$words[1]]};
        local curcontext="${curcontext%:*:*}:$service-$cmd"
        case $cmd in
          # fallthroughs
          (*) 
            if (( subcommands[(Ie)$cmd] )); then
              args+=( '--help[display help]' )
            else
              return 1
            fi
            ;|
          (ifup|ifreload|ifstatus|ifcheck)
            args+=( 
              '--ifconfig:alternative interface configuration:{ compset -P "(compat|firmware)\:"; _files }' # edgecase of a directory or filename 'compat:' being in the cwd
            );|
          (ifstatus|ifcheck) args+=( '--quiet[quiet mode]' );|
          (ifreload|ifcheck) args+=( '--persisent[persisent mode]' );|
          (ifstate|ifcheck)
            local -a ifstates
            ifstates=( device-down device-exists device-up protocols-up 
                       firewall-up link-up link-authenticated lldp-up )
            [[ $cmd == ifcheck ]] && ifstates+=( none network-up )
            ;|
          (ifup|ifdown) args+=('--timeout: : _message "timeout (seconds)"');|
          (ifup|ifdown|ifreload|ifstatus|ifcheck|show-xml) args+=( '1:interface:_net_interfaces' );|

          # normal matches
          (ifup)
            args+=( 
              '--mode[filter by mode element]: : _message "mode identifier"'
              '--boot-stage[filter by boot-stage element]: _message "boot-stage element"'
              '--skip-origin[ignore interfaces]: _message "config source"'
              '--skip-active[ignore active interfaces]'
            );;
          (ifdown)
            args+=(
              '--force[forcefully put interface into state]:state:( $ifstates[@] )'
              '(--no-delete)--delete[delete interface]'
              '(--delete)--no-delete[set interface to device-exists state]'
            );;
          (ifstatus) args+=( '--brief[less verbose output]' );;
          (ifcheck)
            args+=(
              '--missed[check to see if interface is missed]'
              '--changed[check to see if the configuration changed]'
              '--state[check for state]:state:( $ifstates[@] )'
            );;
          (show-config|convert)
            args+=(
              '--raw[filter metadata from config]'
              '--output[output location]:files: _files'
            )
            [[ $cmd == show-config ]] && args+=( '1: :{ compset -P "(compat|firmware|wicked)\:"; _files }' )
            [[ $cmd == convert ]] && args+=( '*: : _files' )
            ;;
          (show-xml) args+=('--raw[show raw dbus reply]');;
          (getnames) args+=('1: : _message "mac address"');;
          (xpath) 
            args+=(
              '--reference[reference expression]: : _message "xpath expression"' 
              '--file[input XML file]: : _files' '1: : _message "format"'
            );;
        esac
        _arguments -C : "$args[@]"
    esac
  done
}

__wickedd() {
  local curcontext="$curcontext" state state_descr line expl
  typeset -A opt_args
  _arguments -C -A "-*" : \
    '--help[show available options]' \
    '--version[show name and version]' \
    '--config[specify configuration file]:config file:_files' \
    '--debug[enable debugging]:facility:->debug' \
    '--log-level[set log level]:level:(error warning notice info debug)' \
    '--log-target[set log target]: : _wicked_logtarget' \
    '--foreground[do not daemonize]' \
    '--recover[load an save state]' \
    '--system[use syslog for logging and not report transient return codes]'

    if [[ $state == debug ]]; then
      local ignore ret=1
      # TODO: the character class seems to be ignored, so -ifconfig,<tab> will show ifconfig still
      ignore=( '[-+]#'${(s:,:)^PREFIX} )
      compset -P '*,'
      compadd -M 'L:|[-+]=' -qS, -F ignore -- ifconfig readwrite xpath extension wicked \
      wicked-xml events dhcp autoip ipv6 socket \
      dbus wireless xml objectmodel application \
      modem lldp timer mini most all && ret=0

      return ret
    fi
}

_wicked() {
  local ret
  _call_function ret "__$service"
  return ret
}
