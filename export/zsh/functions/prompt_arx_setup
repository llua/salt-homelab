prompt_arx_help() {
  cat <<\eof
justdoit(tm)
eof
}

prompt_arx_setup() {
  autoload -Uz add-zsh-hook
  local name vcs_info c p vp
  zstyle -a ':prompt:arx:' hosts localhost
  zstyle -a ':prompt:arx:' users name
  zstyle -s ':prompt:arx:' primary-color c
  zstyle -s ':prompt:arx:' secondary-color p
  zstyle -s ':prompt:arx:' delimiter-color vp

  if (( $(tput colors) == 8 )); then
    zstyle -s ':prompt:arx:' primary-color-8colors c
    zstyle -s ':prompt:arx:' secondary-color-8colors p
    zstyle -s ':prompt:arx:' delimiter-color-8colors vp
  fi

  : ${c:=default} ${p:=default} ${vp:=default}

  if  [[ $TTY = /dev/(pts/|tty[vh])<-> ]] &&
      ! (( $#parameters[(I)(SSH_(CLIENT|TTY|CONNECTION)|container)] )) &&
      ! (( UID == 0 )); then
    PROMPT="%F{$p}%B%#%b%f "
  else
    PROMPT="%F{$c}%m%f %F{$p}%B%#%b%f "
  fi

  if ! (( name[(I)${(%):-%n}] )); then
    PROMPT="%F{$c}%n%B%F{$p}@%b$PROMPT"
  fi

  unset RPROMPT
  if (( $+functions[venv] )); then
    add-zsh-hook precmd venv
    RPROMPT+='${psvar[1]}'
  fi

  if (( $+functions[local::lib] )); then
    add-zsh-hook precmd local::lib
    RPROMPT+='${psvar[2]}'
  fi

  if (( $+functions[scl_info] )); then
    add-zsh-hook precmd scl_info
    RPROMPT+='${psvar[3]}'
  fi

  if (( $+functions[bundle_gemfile] )); then
    add-zsh-hook precmd bundle_gemfile
    RPROMPT+='${psvar[4]}'
  fi

  zstyle -a ':prompt:arx:vcs_info:' hosts vcs_info
  if (( vcs_info[(I)$HOST] )); then
    zstyle ':vcs_info:*'     enable git
    zstyle ':vcs_info:git:*' formats "%B%F{$vp}::%%b %F{$c}%b%f"
    zstyle ':vcs_info:git:*' actionformats "%B%F{$vp}::%%b %F{$c}%b %B%F{$vp}::%%b %F{$c}%a%f"
    autoload vcs_info; $_
    RPROMPT+="%B%F{$p}%~%f%b \${vcs_info_msg_0_}"
    if (( $+functions[precmd] == 0 )) || (( $+parameters[precmd_functions] == 0 )); then
      add-zsh-hook precmd vcs_info
    fi
  else
    RPROMPT+="%B%F{$p}%~%f%b"
  fi
}

prompt_arx_setup "$@"
